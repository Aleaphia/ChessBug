package chessBug;

import com.warrenstrange.googleauth.GoogleAuthenticator;
import com.warrenstrange.googleauth.GoogleAuthenticatorKey;
import com.warrenstrange.googleauth.GoogleAuthenticatorQRGenerator;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class GoogleAuthService {

    private final GoogleAuthenticator googleAuthenticator = new GoogleAuthenticator();

    // Generate a secret key for a given username
    public GoogleAuthenticatorKey generateSecretKey(String username) {
        GoogleAuthenticatorKey key = googleAuthenticator.createCredentials();
        
        // Save secret key to the database
        saveSecretKeyToDatabase(username, key.getKey());

        return key;
    }

    // Generate QR Barcode URL for the OTP app
    public String getQRBarcodeURL(String username, String secretKey) {
        return GoogleAuthenticatorQRGenerator.getOtpAuthURL("ChessBug", username, secretKey);
    }

    // Verify the code generated by the Google Authenticator app
    public boolean verifyCode(String secretKey, int code) {
        return googleAuthenticator.authorize(secretKey, code);
    }

    // Save the secret key to the database
    private void saveSecretKeyToDatabase(String username, String secretKey) {
        String jdbcUrl = "jdbc:mysql://localhost:3306/chessbug";  // Replace with your DB URL
        String dbUser = "csc";  // Replace with your DB username
        String dbPassword = "csccapstone2025!";  // Replace with your DB password

        String sql = "UPDATE users SET secret_key = ? WHERE username = ?";  // Adjust to your table and column names

        try (Connection conn = DriverManager.getConnection(jdbcUrl, dbUser, dbPassword);
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            
            // Set the parameters for the prepared statement
            stmt.setString(1, secretKey);
            stmt.setString(2, username);

            // Execute the update query
            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                System.out.println("Secret key saved successfully for user: " + username);
            } else {
                System.out.println("User not found or secret key not updated.");
            }
        } catch (SQLException e) {
            System.err.println("Error saving secret key to database: " + e.getMessage());
        }
    }
}
